consumer_secret = "ncJKW9L7jDjg3XBtJni27HFCQ8IWsO8gjEs7fyvxocyLhwk7ON"
access_token = "85397777-wtOKtNIhQ51mkOHLNYxquPnzG0wjOWK2bdYOW1Woi"
access_secret = "TyUsxoE6f3eEbdifNlqONYwVoG5DZsZqMKshJ1RutrTti"
rtweet::create_token()
rtweet::create_token(consumer_key = consumer_key, access_token = access_token, consumer_secret = consumer_secret, access_secret = access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
isolamento_2 <- rtweet::search_tweets2(q = "#IsolamentoVertical", n = 100000, retryonratelimit = TRUE)
myapp = oauth_app("twitter", key=consumer_key, secret=consumer_secret)
sig = sign_oauth1.0(myapp, token=access_token, token_secret=access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
rtweet::get_token()
rtweet::search_30day("aaaaaaaaaaaaa")
botcheck("felipeamorimbr")
Mashape_key = "931034eee4msh3c5b1b4f9d9a559p18ca2ejsne8ce19ef4d5b"
Mashape_key = "931034eee4msh3c5b1b4f9d9a559p18ca2ejsne8ce19ef4d5b"
botcheck("felipeamorimbr")
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
vignette("auth", package = "rtweet")
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
rt <- search_tweets(
"#rstats", n = 18000, include_rts = FALSE
)
require(rtweet)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
token <- createTokenNoBrowser("tchaubots",consumer_key,consumer_secret,
access_token, access_secret)
createTokenNoBrowser<- function(appName, consumerKey, consumerSecret,
accessToken, accessTokenSecret) {
app <- httr::oauth_app(appName, consumerKey, consumerSecret)
params <- list(as_header = TRUE)
credentials <- list(oauth_token = accessToken,
oauth_token_secret = accessTokenSecret)
token <- httr::Token1.0$new(endpoint = NULL, params = params,
app = app, credentials = credentials)
return(token)
}
token <- createTokenNoBrowser("tchaubots",consumer_key,consumer_secret,
access_token, access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
token <- createTokenNoBrowser("tchaubots",consumer_key,consumer_secret,
access_token, access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE, token)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE, token = token)
token <- createTokenNoBrowser("tchaubots",consumer_key,consumer_secret,
access_token, access_secret)
token
myapp
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE, token = myapp)
sig
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE, token = sig)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
create_token()
create_token("tchaubots",consumer_key,consumer_secret,
access_token, access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
create_token("tchaubots",consumer_key = consumer_key, consumer_secret = consumer_secret, access_token = access_token, access_secret = access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
consumer_key = "WuM8o2KxJT4O5rDg8fY89S1W5"
consumer_secret = "AWuJZUKaYllFJysqZLXGUb58yAtOxz8QkgOT6IQBnoyc2Tbsxf"
access_token = "85397777-wtOKtNIhQ51mkOHLNYxquPnzG0wjOWK2bdYOW1Woi"
access_secret = "TyUsxoE6f3eEbdifNlqONYwVoG5DZsZqMKshJ1RutrTti"
create_token("tchaubots",consumer_key = consumer_key, consumer_secret = consumer_secret, access_token = access_token, access_secret = access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
create_token("tchaubots",consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_secret)
token <- create_token(
app = "tchaubots",
consumer_key = api_key,
consumer_secret = api_secret_key,
access_token = access_token,
access_secret = access_token_secret)
token <- create_token(
app = "tchaubots",
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_token_secret)
token <- create_token(
app = "tchaubots",
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
token <- create_token(
app = "tchaubots",
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_secret)
Mashape_key = "931034eee4msh3c5b1b4f9d9a559p18ca2ejsne8ce19ef4d5b"
consumer_key = "WuM8o2KxJT4O5rDg8fY89S1W5"
consumer_secret = "AWuJZUKaYllFJysqZLXGUb58yAtOxz8QkgOT6IQBnoyc2Tbsxf"
access_token = "85397777-wtOKtNIhQ51mkOHLNYxquPnzG0wjOWK2bdYOW1Woi"
access_secret = "TyUsxoE6f3eEbdifNlqONYwVoG5DZsZqMKshJ1RutrTti"
token <- create_token(
app = "tchaubots",
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_secret)
require(rtweet)
library(httr)
library(xml2)
library(RJSONIO)
library(botcheck)
token <- create_token(
app = "tchaubots",
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_secret)
isolamento_1 <-  rtweet::search_tweets2(q = "Isolamento vertical", n = 100000, retryonratelimit = TRUE)
isolamento_2 <- rtweet::search_tweets2(q = "#IsolamentoVertical", n = 100000, retryonratelimit = TRUE)
isolamento_1_users <- c(isolamento_1$user_id, isolamento_1$screen_name)
isolamento_2_users <- c(isolamento_2$user_id, isolamento_2$screen_name)
isolamento_3 <- rtweet::search_tweets2(q = "#BoraTrabalhar", n = 100000, retryonratelimit = TRUE)
isolamento_3_users <- c(isolamento_3$user_id, isolamento_3$screen_name)
bots_1 <- botcheck(isolamento_1_users[,2])
isolamento_1_users
isolamento_1_users[,2]
isolamento_1_users[,1]
isolamento_1_users[1]
isolamento_1_users[1,2]
isolamento_1_users[1,1]
isolamento_1_users <- c(isolamento_1$user_id, isolamento_1$screen_name)
isolamento_1$screen_name
bots_1 <- botcheck(isolamento_1$screen_name, fast = TRUE)
bots_1 <- botcheck(isolamento_1$screen_name)
bots_1 <- botcheck(isolamento_1$screen_name)
bots_1 <- botcheck(isolamento_1$screen_name[1])
myapp = oauth_app("twitter", key=consumer_key, secret=consumer_secret)
sig = sign_oauth1.0(myapp, token=access_token, token_secret=access_secret)
bots_1 <- botcheck(isolamento_1$screen_name[1])
bots_1
bots_1 <- botcheck(isolamento_1$screen_name[1:25814])
bots_1 <- rep(0, length(isolamento_1$screen_name))
bots_1
length(bots_1)
for(i in 1:12592){
bots_1[i] <- botcheck(isolamento_1$screen_name[i])
}
save.image("C:/Users/felip/Dropbox/Analisando hashtags/isolamento.RData")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
library(shiny)
library(shinyBS)
library(shinyMenus)
app <- shinyApp(
ui =
fluidPage(
smNavBar("testMenu", "shinyMB", full.width = TRUE, fixed = FALSE,
actionLink("testLink", "Link"),
actionLink("testLink2", "Link #2"),
textInput("n", "Sample Size", value = 1000),
smNavDropdown("Distribution",
smRadio("dist", "norm", "Normal", selected = TRUE),
smRadio("dist", "lnorm", "Lognormal"),
smRadio("dist", "unif", "Uniform")
),
smQuickDropdown("qd2Test", parent = "navbar", "Quick Dropdown", c("Action 1", "Action 2", "Action 3"))
),
smDropdown(actionLink("ddTest", "Dropdown"),
smHeader("Action Elements"),
smAction("action1", "Action"),
smAction("action2", "Another Action"),
smDivider(),
smHeader("Checkbox Elements"),
smCheckbox("testCB", "cb1", "First Checkbox"),
smCheckbox("testCB", "cb2", "Second Checkbox"),
smCheckbox("testCB", "cb3", "Third Checkbox", selected = TRUE),
smDivider(),
smHeader("More Checkboxes"),
smCheckbox("testCB2", "cb21", "First Checkbox", selected = TRUE),
smCheckbox("testCB2", "cb22", "Second Checkbox", selected = TRUE),
smCheckbox("testCB2", "cb23", "Third Checkbox"),
smDivider(),
smHeader("Radio Elements"),
smRadio("testRB", "rb1", "First Radio"),
smRadio("testRB", "rb2", "Second Radio", selected = TRUE),
smRadio("testRB", "rb3", "Third Radio", selected = TRUE)
),
smQuickDropdown("qdTest", "Quick Dropdown", c("Action 1", "Action 2", "Action 3")),
plotOutput("testPlot"),
smContextMenu("context1", "testPlot",
smRadio("dist", "norm", "Normal", selected = TRUE),
smRadio("dist", "lnorm", "Lognormal"),
smRadio("dist", "unif", "Uniform")
)
),
server =
function(input, output, session) {
observeEvent(input$testCB2, ({print(input$testCB2)}))
observeEvent(input$testRB, ({print(input$testRB)}))
observeEvent(input$qdTest, ({print(input$qdTest)}))
observeEvent(input[["Action 1"]], ({print(input[["Action 1"]])}))
output$testPlot <- renderPlot({
dist <- switch(input$dist,
norm = rnorm,
lnorm = rlnorm,
unif = runif
)
plot(dist(input$n))
})
}
)
runApp(app)
shinyWidgets:::shinyWidgetsGallery()
countries()
countries
shinyWidgets:::shinyWidgetsGallery()
runApp('C:/Users/felip/Dropbox/Projeto Inla/inla-interface')
runApp('C:/Users/felip/Dropbox/Projeto Inla/inla-interface')
input$language
input$languge %>% is.null()
exists(input$language)
shiny::runApp('C:/Users/felip/Dropbox/Projeto Inla/inla-interface')
runApp('C:/Users/felip/Dropbox/Projeto Inla/inla-interface')
runApp('C:/Users/felip/Dropbox/Projeto Inla/inla-interface')
runApp('C:/Users/felip/Dropbox/Projeto Inla/inla-interface')
getOption("encoding")
sessionInfo()
runApp()
runApp('C:/Users/felip/Dropbox/Projeto Inla/inla-interface')
citation("INLA")
toBibtex(citation("INLA"))
cite()
cite("INLA")
citation("INLA")
setwd("C:/Users/felip/Dropbox/Projeto Inla/inla-interface/modal")
readline("file_modal")
readline("file_modal.R")
readline("file_modal.R")
readLines("file_modal.R")
teste <- readLines("file_modal.R")
teste
teste[1]
teste[2]
teste[2,1]
teste[2]
teste[3]
teste[4]
teste[4]
teste[5]
teste[6]
install.packages("stringr")
require(stringr)
c(1,2,3) %>% sum()
str_extract(teste, "translate")
str_subset(teste, "translate")
??stringr::str_extract_all
pattern <- "a.b"
strings <- c("abb", "a.b")
str_detect(strings, pattern)
str_detect(strings, fixed(pattern))
str_detect(strings, coll(pattern))
teste
str_subset(teste, "translate")
str_subset(teste, "translate")
str_subset(teste, "translate")[1]
str_subset(teste, "translate")
str_subset(teste, "translate")
only_translate <- str_subset(teste, "translate")
only_translate
only_translate
gsub("translate", x = only_translate)
gsub("translate", x = only_translate, replacement = "")
stringr::str_extract(only_translate, "translate")
stringr::str_extract(only_translate, "translate...")
shopping_list <- c("apples x4", "bag of flour", "bag of sugar", "milk x2")
str_extract(shopping_list, "\\d")
str_extract(shopping_list, "[a-z]+")
str_extract(shopping_list, "[a-z]{1,4}")
str_extract(shopping_list, "\\b[a-z]{1,4}\\b")
stringr::str_extract(only_translate, "translate[a-z]")
stringr::str_extract(only_translate, "translate([a-z])")
stringr::str_extract(only_translate, "translate()")
stringr::str_extract(only_translate, "translate(")
stringr::str_extract(only_translate, "translate\(")
stringr::str_extract(only_translate, "translate()
stringr::str_extract(only_translate, "translate")
stringr::str_extract(only_translate, "translate(...)")
stringr::str_extract(only_translate, "(...)")
stringr::str_extract(only_translate, (...))
stringr::str_extract(only_translate, "translate")
stringr::str_extract(only_translate, "translate+?")
stringr::str_extract(only_translate, "translate*+)")
stringr::str_extract(only_translate, "translate*+\)")
stringr::str_extract(only_translate, "translate\\(")
stringr::str_extract(only_translate, "translate\\(*")
stringr::str_extract(only_translate, "translate\\(*\\)")
stringr::str_extract(only_translate, "translate\\(*\\"")
)
stringr::str_extract(only_translate, "translate\\(*\\""")
stringr::str_extract(only_translate, "translate\\(*\\"")
stringr::str_extract(only_translate, "translate\\(*\\""
)
stringr::str_extract(only_translate, "translate\\(*\\""
stringr::str_extract(only_translate, "translate\\(*\\"""")
stringr::str_extract(only_translate, "translate\\(*\\""")
stringr::str_extract(only_translate, "translate\\(*\\"")
stringr::str_extract(only_translate, "translate\\(*\\")
stringr::str_extract(only_translate, "translate\\(*\\)
stringr::str_extract(only_translate, "translate\\(*)
stringr::str_extract(only_translate, "translate\\()
stringr::str_extract(only_translate, "translate\\(")
stringr::str_extract(only_translate, "translate\\(+" )
stringr::word(string = only_translate, start = "translate", end = "\\")
stringr::word(string = only_translate, start = "translate", end = "\\"")
stringr::word(string = only_translate, start = "translate", end = """)
stringr::word(string = only_translate, start = "translate", end = "\"")
stringr::word(string = only_translate, start = "translate")
stringr::word(string = only_translate, start = "translate", end = '')
stringr::word(string = only_translate, start = "translate", end = 1)
stringr::word(string = only_translate, start = 1, sep = "\\"")
)
stringr::word(string = only_translate, start = 1, sep = "translate")
gsub("translate\\(")
gsub("translate\\(", teste)
gsub("translate\\(", x = teste)
gsub("translate\\(", x = teste)
gsub("translate\\(", x = teste, replacement = "")
sub("translate\\(", x = teste, replacement = "")
sub("translate\\(", x = only_translate, replacement = "")
sub("translate\\(", x = only_translate, replacement = "")
gsub("translate\\(", x = only_translate, replacement = "")
gsub(".translate(", x = only_translate, replacement = "")
gsub(".*translate(", x = only_translate, replacement = "")
gsub(".*", x = only_translate, replacement = "")
gsub(".* ", x = only_translate, replacement = "")
gsub(".* $", x = only_translate, replacement = "")
gsub(".*translate$", x = only_translate, replacement = "")
gsub(".* translate$", x = only_translate, replacement = "")
gsub(".* translate \\"", x = only_translate, replacement = "")
gsub(".* translate \\" ", x = only_translate, replacement = "")
gsub(".* translate \\" $", x = only_translate, replacement = "")
gsub(".* translate \\" $ ", x = only_translate, replacement = "")
gsub(".* translate  $ ", x = only_translate, replacement = "")
gsub(".* translate  .$ ", x = only_translate, replacement = "")
gsub(".* translate  \\".$ ", x = only_translate, replacement = "")
gsub(".* translate  \\\".$ ", x = only_translate, replacement = "")
gsub(".* translate  \\\". \\\" ", x = only_translate, replacement = "")
gsub(".* translate  \\\". \\\",", x = only_translate, replacement = "")
gsub(".* translate.,", x = only_translate, replacement = "")
gsub(".* translate.\,", x = only_translate, replacement = "")
gsub(".*translate.,", x = only_translate, replacement = "")
gsub("translate.,", x = only_translate, replacement = "")
gsub("translate", x = only_translate, replacement = "")
gsub("translate", x = only_translate, replacement = "")
gsub("translate", x = only_translate, replacement = "")
gsub(".* translate(\\* (.+) \\* ", x = only_translate, replacement = "")
gsub(".* translate(\\* (.+) \\*", x = only_translate, replacement = "")
gsub(".* translate(\\* (.+) ", x = only_translate, replacement = "")
gsub(".* translate(\\* (.+) $", x = only_translate, replacement = "")
gsub(".* translate(\\* '('.+) $", x = only_translate, replacement = "")
gsub(".* translate(\\* '('.+')' $", x = only_translate, replacement = "")
gsub(".* translate(\\* (.+) $", x = only_translate, replacement = "")
gsub(".* translate(\\* (.+) $", x = only_translate, replacement = \\1)
gsub(".* translate(\\* (.+) $", x = only_translate, replacement = "\\1")
gsub(".* translate(\\*$", x = only_translate, replacement = "\\1")
gsub(".* translate\\(\\*$", x = only_translate, replacement = "\\1")
gsub(".*translate\\(\\*$", x = only_translate, replacement = "\\1")
gsub(".*translate\\(*$", x = only_translate, replacement = "\\1")
gsub(".*translate\\(*$", x = only_translate, replacement = "\\1")
gsub(".*translate\\( (.+) ,*$", x = only_translate, replacement = "\\1")
gsub(".*translate\\( (.+) ,*$", x = only_translate, replacement = "\\1")
sa <- "PRODUCT colgate good but not goodOKAY"
sub(".*PRODUCT *(.*?) *OKAY.*", "\\1", sa)
sa <- "aaPRODUCT colgate good but not goodOKAY"
sub(".*PRODUCT *(.*?) *OKAY.*", "\\1", sa)
gsub(".*translate\\(* (.*?) ,.*", x = only_translate, replacement = "\\1")
gsub(".*translate\\(* (.*) ,.*", x = only_translate, replacement = "\\1")
gsub(".*translate\\(* (.*) ,.*", x = only_translate, replacement = "\\1")
gsub(".*translate\\(* (.*) ,.*", x = teste, replacement = "\\1")
sub(".*PRODUCT *(.*?) *OKAY.*", "\\1", sa)
gsub(".* translate$", "\\1", only_translate)
only_translate
gsub(".* translate.*$", "\\1", only_translate)
gsub(".*translate.*$", "\\1", only_translate)
gsub(".*translate\(.*$", "\\1", only_translate)
gsub(".*translate\\(.*$", "\\1", only_translate)
gsub("^.*translate\\( .*$", "\\1", only_translate)
gsub("^.*translate\\( (.*) , .*$", "\\1", only_translate)
gsub("^.translate\\( (.*) , .*$", "\\1", only_translate)
gsub("^.translate (.*) , .*$", "\\1", only_translate)
gsub("^.translate(.*) , .*$", "\\1", only_translate)
gsub("^.translate(.*) ,.*$", "\\1", only_translate)
gsub("^.translate(.*),.*$", "\\1", only_translate)
gsub("^.translate(.*),.*$", "", only_translate)
gsub("", "", only_translate)
gsub("translate", "", only_translate)
gsub("^*translate", "", only_translate)
gsub("^.*translate", "", only_translate)
gsub("^.*translate (.*) ,.$", "", only_translate)
gsub("^.*translate (.*) ,$", "", only_translate)
gsub("^.*translate (.*)$", "", only_translate)
gsub("^.*translate", "", only_translate)
gsub("^.*translate\\(", "", only_translate)
??regex
gsub("^.*translate\\( (.*+) ", "", only_translate)
gsub("^.*translate\\( (.*+) ,*$ ", "", only_translate)
gsub("^.*translate\\(", "", only_translate)
gsub("^.*translate\\( [^\\"+], "", only_translate)
gsub("^.*translate\\( (^\\"+) ", "", only_translate)
gsub("^.*translate\\( (^\\"+) ", "\\1", only_translate)
gsub("^.*translate\( (^\\"+) ", "\\1", only_translate)
gsub("^.*translate\\( (^\\"+) ", "\\1", only_translate)
gsub("^.*translate\\( (^"+) ", "\\1", only_translate)
gsub("^.*translate\\( , "\\1", only_translate)
gsub("^.*translate\\("\\1", only_translate)
gsub("^.*translate\\(", "", only_translate)
gsub("^.*[translate]\\(", "", only_translate)
gsub("^.*[translate] ([^.+])\\(", "", only_translate)
gsub("^.*[translate] ([^.]+)\\(", "", only_translate)
gsub("^.*[translate]\\() ([^.]+)", "", only_translate)
gsub("^.*[translate]\\( ([^.]+)", "", only_translate)
gsub("^.*[translate]([^.]+)", "", only_translate)
gsub("^.*[translate] ([^.]+)", "", only_translate)
gsub("^.*[translate] ([^.]+)\\(", "", only_translate)
gsub("^.*[translate] ([^.]+)\\( [,].*", "", only_translate)
gsub("^.*[translate] ([^.]+)\\( [,]", "", only_translate)
gsub("^.*[translate] ([^.]+)\\(", "", only_translate)
gsub("^.*[translate] ([^.]+)", "", only_translate)
gsub("^.*[translate] ([^.]+)", "\\1", only_translate)
gsub("^.*[translate] ([\\"])", "\\1", only_translate)
gsub("^.*[translate] (\\")", "\\1", only_translate)
gsub("^.*[translate] (\\')", "\\1", only_translate)
gsub("^.*[translate]\\(", "\\1", only_translate)
gsub("^.*[translate]\\( ([^.]+)", "\\1", only_translate)
gsub("^.*[translate]\\( ([^.]+)[,].*", "\\1", only_translate)
gsub("^.*[translate]\\( ([^.]+) [,].*", "\\1", only_translate)
gsub("^.*[translate]\\( ([^.]+) [,].*", "\\1", only_translate)
gsub("^.*[translate]\\( ([^"]+) [,].*", "\\1", only_translate)
gsub("^.*[translate]\\( ([^\\"]+) [,].*", "\\1", only_translate)
gsub("^.*[translate]\\( ([^\\"]+)", "\\1", only_translate)
gsub("^.*[translate]\\(", "\\1", only_translate)
gsub("^.*[translate][^,]\\(", "\\1", only_translate)
gsub("^.*[translate]\\( [^,]+,", "\\1", only_translate)
gsub("^.*[translate]\\( (.+?) [^,]+,", "\\1", only_translate)
gsub(".*[translate]\\( (.+?) [^,]+,", "\\1", only_translate)
gsub(".*[translate]\\(", "\\1", only_translate)
gsub('.*[translate]\\( ()', "\\1", only_translate)
gsub('.*[translate]\\(', "\\1", only_translate)
gsub('.*[translate]\\(" ([^.]+)" .*', "\\1", only_translate)
gsub('.*[translate]\\(\\" ([^.]+)\\" .*', "\\1", only_translate)
gsub('.*[translate]\\(\\" ([^.]+)\\".*', "\\1", only_translate)
gsub('.*[translate]\\(\\" ([^.]+) \\".*', "\\1", only_translate)
gsub('.*[translate]\\(\\" ([^.]+) \\"', "\\1", only_translate)
gsub('.*[translate]\\(\\" ([^.]+)', "\\1", only_translate)
gsub('.*[translate]\\(\\" ([^.]+) \\"', "\\1", only_translate[1])
only_translate[1]
gsub('.*[translate]\\(\\"', "\\1", only_translate[1])
gsub('.*[translate]\\(\\" (^*)[\\"] ', "\\1", only_translate[1])
gsub('.*[translate]\\(\\" (^*)', "\\1", only_translate[1])
gsub('.*[translate]\\( ', "\\1", only_translate[1])
gsub('.*[translate]\\( ', "\\1", only_translate)
gsub('.*[translate]', "\\1", only_translate)
gsub('.*[translate] (.*+) ,.*', "\\1", only_translate)
gsub('.*[translate] (.*+) [,].*', "\\1", only_translate)
gsub('.*[translate] () [,].*', "\\1", only_translate)
gsub('.*[translate]', "\\1", only_translate)
gsub('.*[translate]', "", only_translate)
gsub('.*', "", only_translate)
gsub('.*translate\\(', "", only_translate)
gsub('.*translate\\( | \\,language', "", only_translate)
gsub('.*translate\\( | \\, language', "", only_translate)
gsub('.*translate\\( | , language', "", only_translate)
gsub('.*translate\\( |, language', "", only_translate)
gsub('.*translate\\(|, language', "", only_translate)
gsub('.*translate\\(|, language = language_selected, dictionary\\)', "", only_translate)
gsub('.*translate\\(|\\, language = language_selected, dictionary\\)', "", only_translate)
gsub('.*translate\\(|\\, language = language_selected, dictionary\\)', "", only_translate)
gsub('.*translate\\(|\\, language = language_selected, dictionary\\)'|\\,, "", only_translate)
gsub('.*translate\\(|\\, language = language_selected, dictionary\\)'|[\], "", only_translate)
gsub('.*translate\\(|\\, language = language_selected, dictionary\\)'|[\,, "", only_translate)
gsub('.*translate\\(|\\, language = language_selected, dictionary\\)'|[\],, "", only_translate)
gsub('.*translate\\(|\\, language = language_selected, dictionary\\)'|[,], "", only_translate)
gsub('.*translate\\(, "", only_translate)
gsub('.*translate\\( , "", only_translate)
gsub('.*translate\\(' , "", only_translate)
gsub('.*translate\\(' "", only_translate)
gsub('.*translate\\(' ,"", only_translate)
gsub('.*translate\\( (.*) \\, language.*' ,"", only_translate)
gsub('.*translate\\( (.*) \\, language.*' ,"\\1", only_translate)
gsub('.*translate\\( (.*) language.*' ,"\\1", only_translate)
gsub('.*translate\\((.*)\\, language.*' ,"\\1", only_translate)
gsub('.*translate\\((.*)\\, language.*' ,"\\1", 'translate("aaaaaaa", language = language_selected, dictionary),translate("bbbbb", language = language_selected, dictionary)'
)
gsub('.*translate\\((.*)\\, language.*' ,"\\1", 'translate("aaaaaaa", language = language_selected, dictionary),translate("bbbbb", language = language_selected, dictionary)')
str_subset(c("translatedfsdf", "ddkdasfa", "translate,dskfjsdtranslatesdfasd"), "translate")
str_subset(c("translatedfsdf", "ddkdasfa", "translate,dskfjsdtranslatesdfasd"), "translate")
grep(x = c("translatedfsdf", "ddkdasfa", "translate,dskfjsdtranslatesdfasd"), pattern = "translate", value = TRUE)
teste <- readLines("file_modal.R")
only_translate <- grep(teste, "translate")
only_translate <- grep(teste, pattern = "translate", value = TRUE)
only_translate
