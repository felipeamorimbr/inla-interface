lm_fixed_priors_data()
lm_formula_data()
lm_formula_data
lm_formula_data$resp_selected
class(lm_formula_data())
class(lm_formula_data
)
runApp()
runApp()
lm_formula_data()
lm_formula_data
lm_formula_data$
cov_var
lm_formula_data$cov_var
lm_formula_data$cov_var()
lm_formula_data()
lm_formula_data()$cov_var
lm_control_family()
lm_formula_data()
lm_formula_data
runApp()
lm_formula_data()
lm_formula_data
lm_formula_data()
lm_formula_data()$cov_var
lm_formula_data()$cov_var()
lm_formula_data$cov_var()
lm_formula_data$cov_var
lm_formula_data
lm_formula_data[1]
lm_formula_data()[1]
# Test ----
dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
verbatimTextOutput("prints")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
output$prints <- renderPrint({
imprimir()
})
}
shinyApp(ui, server)
input$cov_var
input$cov_var
#Module for select response variable
sel_formula_ui <- function(id){
ns <- NS(id)
uiOutput(outputId = ns("ui_cov_var"))
}
sel_formula <- function(id, variables, resp_label, left_label, right_label){ #Return the selected response variable
moduleServer(
id,
function(input,output, session){
output$ui_cov_var <- renderUI({
ns <- session$ns
new_chooser_UI(id = ns("cov_var"),
respLabel = resp_label,
selected_left = variables,
selected_right = NULL)
})
observe({
new_chooser(id = "cov_var",
selected_left = variables,
selected_right = NULL,
leftLabel = left_label,
rightLabel = right_label)
})
selected_formula <- reactive({
validate(need(input$cov_var, message = FALSE))
p <- list(resp_seleted = resp_var_selected(), intercept = as.numeric(input$intercept), cov_var = input$cov_var)
return(p)
})
return(selected_formula)
}
)
}
# Test ----
dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
verbatimTextOutput("prints")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
output$prints <- renderPrint({
imprimir()
})
}
shinyApp(ui, server)
sel_formula <- function(id, variables, resp_label, left_label, right_label){ #Return the selected response variable
moduleServer(
id,
function(input,output, session){
output$ui_cov_var <- renderUI({
ns <- session$ns
new_chooser_UI(id = ns("cov_var"),
respLabel = resp_label,
selected_left = variables,
selected_right = NULL)
})
observe({
new_chooser(id = "cov_var",
selected_left = variables,
selected_right = NULL,
leftLabel = left_label,
rightLabel = right_label)
})
selected_formula <- reactive({
validate(need(input$cov_var, message = FALSE))
p <- list(resp_seleted = resp_var_selected(), intercept = as.numeric(input$intercept), cov_var = input$cov_var)
browser()
return(p)
})
return(selected_formula)
}
)
}
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
verbatimTextOutput("prints")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
output$prints <- renderPrint({
imprimir()
})
}
shinyApp(ui, server)
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
verbatimTextOutput("prints")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
output$prints <- renderPrint({
imprimir()
})
}
shinyApp(ui, server)
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test", "ok")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
imprimir()
imprimir()$
)
server <- function(input, output, session){
imprimir <- reactive({sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)})
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
imprimir()
class(imprimir())
class(imprimir
)
class(imprimir)
imprimir
source("Modules/new_chooser.R")
#Module for select response variable
sel_formula_ui <- function(id){
ns <- NS(id)
uiOutput(outputId = ns("ui_cov_var"))
}
sel_formula <- function(id, variables, resp_label, left_label, right_label){ #Return the selected response variable
moduleServer(
id,
function(input,output, session){
output$ui_cov_var <- renderUI({
ns <- session$ns
new_chooser_UI(id = ns("cov_var"),
respLabel = resp_label,
selected_left = variables,
selected_right = NULL)
})
selected_formula <- reactive({
new_chooser(id = "cov_var",
selected_left = variables,
selected_right = NULL,
leftLabel = left_label,
rightLabel = right_label)
})
return(selected_formula)
}
)
}
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test", "ok")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
imprimir()
imprimir()$intercept
imprimir$intercept()
imprimir$intercept
imprimir()$intercept
imprimir()$intercept()
imprimir()$intercept()
imprimir()$cov_var()
imprimir()$cov_var
imprimir()$cov_var$
)
imprimir()$cov_var()
imprimir()$resp
imprimir()$resp_var()
imprimir()$resp_var
imprimir()
imprimir()$resp_sel()
source("Modules/new_chooser.R")
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test", "ok")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
imprimir()
imprimir()$intercept()
imprimir()$cov_var()
imprimir()$cov_var()[1]
imprimir()$cov_var
imprimir$cov_var()
imprimir$intercept
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
source("Modules/new_chooser.R")
#Module for select response variable
sel_formula_ui <- function(id){
ns <- NS(id)
uiOutput(outputId = ns("ui_cov_var"))
}
sel_formula <- function(id, variables, resp_label, left_label, right_label){ #Return the selected response variable
moduleServer(
id,
function(input,output, session){
output$ui_cov_var <- renderUI({
ns <- session$ns
new_chooser_UI(id = ns("cov_var"),
respLabel = resp_label,
selected_left = variables,
selected_right = NULL)
})
selected_formula <- reactive({
new_chooser(id = "cov_var",
selected_left = variables,
selected_right = NULL,
leftLabel = left_label,
rightLabel = right_label)
})
return(selected_formula)
}
)
}
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test", "ok")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
source("Modules/new_chooser.R")
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test", "ok")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
imprimir()
source("Modules/new_chooser.R")
#Module for select response variable
sel_formula_ui <- function(id){
ns <- NS(id)
uiOutput(outputId = ns("ui_cov_var"))
}
sel_formula <- function(id, variables, resp_label, left_label, right_label){ #Return the selected response variable
moduleServer(
id,
function(input,output, session){
output$ui_cov_var <- renderUI({
ns <- session$ns
new_chooser_UI(id = ns("cov_var"),
respLabel = resp_label,
selected_left = variables,
selected_right = NULL)
})
selected_formula <- reactive({
new_chooser(id = "cov_var",
selected_left = variables,
selected_right = NULL,
leftLabel = left_label,
rightLabel = right_label)
})
return(selected_formula)
}
)
}
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test", "ok")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
shinyApp(ui, server)
sel_formula <- function(id, variables, resp_label, left_label, right_label){ #Return the selected response variable
moduleServer(
id,
function(input,output, session){
output$ui_cov_var <- renderUI({
ns <- session$ns
new_chooser_UI(id = ns("cov_var"),
respLabel = resp_label,
selected_left = variables,
selected_right = NULL)
})
selected_formula <- new_chooser(id = "cov_var",
selected_left = variables,
selected_right = NULL,
leftLabel = left_label,
rightLabel = right_label)
return(selected_formula)
}
)
}
# Test ----
# dados <- read.csv2("https://raw.githubusercontent.com/felipeamorimbr/inla-interface/master/data/ex-database.csv")
load("data/lm_modal_words.RData")
language_selected <- "en"
ui <- fluidPage(
sel_formula_ui(
id = "lm_formula"
),
actionButton("test", "ok")
)
server <- function(input, output, session){
imprimir <- sel_formula(
id = "lm_formula",
variables = row.names(USArrests),resp_label = "Response Variable", left_label = "Variables to Choose", right_label = "Selected Variable"
)
observeEvent(input$test, {
browser()
})
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
